# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/sounds',
                'doc_host': 'https://Ssslakter.github.io',
                'git_url': 'https://github.com/Ssslakter/sounds',
                'lib_path': 'sounds'},
  'syms': { 'sounds.hits.data': { 'sounds.hits.data.TfmDataset': ('hits_01_data_prep.html#tfmdataset', 'sounds/hits/data.py'),
                                  'sounds.hits.data.TfmDataset.__getitem__': ( 'hits_01_data_prep.html#tfmdataset.__getitem__',
                                                                               'sounds/hits/data.py'),
                                  'sounds.hits.data.TfmDataset.__init__': ( 'hits_01_data_prep.html#tfmdataset.__init__',
                                                                            'sounds/hits/data.py'),
                                  'sounds.hits.data.TfmDataset.__len__': ( 'hits_01_data_prep.html#tfmdataset.__len__',
                                                                           'sounds/hits/data.py'),
                                  'sounds.hits.data.dataloaders': ('hits_01_data_prep.html#dataloaders', 'sounds/hits/data.py'),
                                  'sounds.hits.data.describe': ('hits_01_data_prep.html#describe', 'sounds/hits/data.py'),
                                  'sounds.hits.data.generate_dataset': ('hits_01_data_prep.html#generate_dataset', 'sounds/hits/data.py'),
                                  'sounds.hits.data.load_stream': ('hits_01_data_prep.html#load_stream', 'sounds/hits/data.py'),
                                  'sounds.hits.data.merge_items': ('hits_01_data_prep.html#merge_items', 'sounds/hits/data.py'),
                                  'sounds.hits.data.merge_with_stones': ('hits_01_data_prep.html#merge_with_stones', 'sounds/hits/data.py'),
                                  'sounds.hits.data.plot_spectrogram': ('hits_01_data_prep.html#plot_spectrogram', 'sounds/hits/data.py'),
                                  'sounds.hits.data.rand_slice': ('hits_01_data_prep.html#rand_slice', 'sounds/hits/data.py'),
                                  'sounds.hits.data.random_split_dataset': ( 'hits_01_data_prep.html#random_split_dataset',
                                                                             'sounds/hits/data.py'),
                                  'sounds.hits.data.split_audio': ('hits_01_data_prep.html#split_audio', 'sounds/hits/data.py')},
            'sounds.hits.models': { 'sounds.hits.models.MainBlock': ('hits_02_model.html#mainblock', 'sounds/hits/models.py'),
                                    'sounds.hits.models.MainBlock.__init__': ( 'hits_02_model.html#mainblock.__init__',
                                                                               'sounds/hits/models.py'),
                                    'sounds.hits.models.MainBlock.forward': ( 'hits_02_model.html#mainblock.forward',
                                                                              'sounds/hits/models.py'),
                                    'sounds.hits.models.MatchBoxNetwork': ('hits_02_model.html#matchboxnetwork', 'sounds/hits/models.py'),
                                    'sounds.hits.models.MatchBoxNetwork.__init__': ( 'hits_02_model.html#matchboxnetwork.__init__',
                                                                                     'sounds/hits/models.py'),
                                    'sounds.hits.models.MatchBoxNetwork.forward': ( 'hits_02_model.html#matchboxnetwork.forward',
                                                                                    'sounds/hits/models.py'),
                                    'sounds.hits.models.TCSBlock': ('hits_02_model.html#tcsblock', 'sounds/hits/models.py'),
                                    'sounds.hits.models.TCSBlock.__init__': ( 'hits_02_model.html#tcsblock.__init__',
                                                                              'sounds/hits/models.py'),
                                    'sounds.hits.models.TCSBlock.forward': ('hits_02_model.html#tcsblock.forward', 'sounds/hits/models.py'),
                                    'sounds.hits.models.tcsConv': ('hits_02_model.html#tcsconv', 'sounds/hits/models.py')},
            'sounds.hits.service': { 'sounds.hits.service.Config': ('hits_04_service.html#config', 'sounds/hits/service.py'),
                                     'sounds.hits.service.apply_transforms': ( 'hits_04_service.html#apply_transforms',
                                                                               'sounds/hits/service.py'),
                                     'sounds.hits.service.init_logger': ('hits_04_service.html#init_logger', 'sounds/hits/service.py'),
                                     'sounds.hits.service.main': ('hits_04_service.html#main', 'sounds/hits/service.py'),
                                     'sounds.hits.service.predict': ('hits_04_service.html#predict', 'sounds/hits/service.py'),
                                     'sounds.hits.service.split_audio': ('hits_04_service.html#split_audio', 'sounds/hits/service.py'),
                                     'sounds.hits.service.stream_loop': ('hits_04_service.html#stream_loop', 'sounds/hits/service.py')},
            'sounds.learner': { 'sounds.learner.Callback': ('fastai_learner.html#callback', 'sounds/learner.py'),
                                'sounds.learner.DeviceCB': ('fastai_learner.html#devicecb', 'sounds/learner.py'),
                                'sounds.learner.DeviceCB.__init__': ('fastai_learner.html#devicecb.__init__', 'sounds/learner.py'),
                                'sounds.learner.DeviceCB.before_batch': ('fastai_learner.html#devicecb.before_batch', 'sounds/learner.py'),
                                'sounds.learner.DeviceCB.before_fit': ('fastai_learner.html#devicecb.before_fit', 'sounds/learner.py'),
                                'sounds.learner.Learner': ('fastai_learner.html#learner', 'sounds/learner.py'),
                                'sounds.learner.Learner.__init__': ('fastai_learner.html#learner.__init__', 'sounds/learner.py'),
                                'sounds.learner.Learner._fit': ('fastai_learner.html#learner._fit', 'sounds/learner.py'),
                                'sounds.learner.Learner._one_batch': ('fastai_learner.html#learner._one_batch', 'sounds/learner.py'),
                                'sounds.learner.Learner._one_epoch': ('fastai_learner.html#learner._one_epoch', 'sounds/learner.py'),
                                'sounds.learner.Learner.backward': ('fastai_learner.html#learner.backward', 'sounds/learner.py'),
                                'sounds.learner.Learner.callback': ('fastai_learner.html#learner.callback', 'sounds/learner.py'),
                                'sounds.learner.Learner.fit': ('fastai_learner.html#learner.fit', 'sounds/learner.py'),
                                'sounds.learner.Learner.get_loss': ('fastai_learner.html#learner.get_loss', 'sounds/learner.py'),
                                'sounds.learner.Learner.one_epoch': ('fastai_learner.html#learner.one_epoch', 'sounds/learner.py'),
                                'sounds.learner.Learner.predict': ('fastai_learner.html#learner.predict', 'sounds/learner.py'),
                                'sounds.learner.Learner.step': ('fastai_learner.html#learner.step', 'sounds/learner.py'),
                                'sounds.learner.Learner.training': ('fastai_learner.html#learner.training', 'sounds/learner.py'),
                                'sounds.learner.Learner.zero_grad': ('fastai_learner.html#learner.zero_grad', 'sounds/learner.py'),
                                'sounds.learner.MetricsCB': ('fastai_learner.html#metricscb', 'sounds/learner.py'),
                                'sounds.learner.MetricsCB.__init__': ('fastai_learner.html#metricscb.__init__', 'sounds/learner.py'),
                                'sounds.learner.MetricsCB._log': ('fastai_learner.html#metricscb._log', 'sounds/learner.py'),
                                'sounds.learner.MetricsCB.after_batch': ('fastai_learner.html#metricscb.after_batch', 'sounds/learner.py'),
                                'sounds.learner.MetricsCB.after_epoch': ('fastai_learner.html#metricscb.after_epoch', 'sounds/learner.py'),
                                'sounds.learner.MetricsCB.before_epoch': ( 'fastai_learner.html#metricscb.before_epoch',
                                                                           'sounds/learner.py'),
                                'sounds.learner.MetricsCB.before_fit': ('fastai_learner.html#metricscb.before_fit', 'sounds/learner.py'),
                                'sounds.learner.ProgressCB': ('fastai_learner.html#progresscb', 'sounds/learner.py'),
                                'sounds.learner.ProgressCB.__init__': ('fastai_learner.html#progresscb.__init__', 'sounds/learner.py'),
                                'sounds.learner.ProgressCB._log': ('fastai_learner.html#progresscb._log', 'sounds/learner.py'),
                                'sounds.learner.ProgressCB.after_batch': ( 'fastai_learner.html#progresscb.after_batch',
                                                                           'sounds/learner.py'),
                                'sounds.learner.ProgressCB.after_epoch': ( 'fastai_learner.html#progresscb.after_epoch',
                                                                           'sounds/learner.py'),
                                'sounds.learner.ProgressCB.before_epoch': ( 'fastai_learner.html#progresscb.before_epoch',
                                                                            'sounds/learner.py'),
                                'sounds.learner.ProgressCB.before_fit': ('fastai_learner.html#progresscb.before_fit', 'sounds/learner.py'),
                                'sounds.learner.run_cbs': ('fastai_learner.html#run_cbs', 'sounds/learner.py'),
                                'sounds.learner.to_cpu': ('fastai_learner.html#to_cpu', 'sounds/learner.py'),
                                'sounds.learner.to_device': ('fastai_learner.html#to_device', 'sounds/learner.py'),
                                'sounds.learner.with_cbs': ('fastai_learner.html#with_cbs', 'sounds/learner.py'),
                                'sounds.learner.with_cbs.__call__': ('fastai_learner.html#with_cbs.__call__', 'sounds/learner.py'),
                                'sounds.learner.with_cbs.__init__': ('fastai_learner.html#with_cbs.__init__', 'sounds/learner.py')}}}
